#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <openssl/aes.h>
unsigned char aes_key[] = "0123456789abcdef";
void aes_encrypt(unsigned char *plaintext, unsigned char *ciphertext) {
    AES_KEY key;
    AES_set_encrypt_key(aes_key, 128, &key);
    AES_encrypt(plaintext, ciphertext, &key);
}
void aes_decrypt(unsigned char *ciphertext, unsigned char *decryptedtext) {
    AES_KEY key;
    AES_set_decrypt_key(aes_key, 128, &key);
    AES_decrypt(ciphertext, decryptedtext, &key);
    decryptedtext[AES_BLOCK_SIZE] = '\0'; 
}
int main() {
    unsigned char plaintext[AES_BLOCK_SIZE + 1]; 
    unsigned char ciphertext[AES_BLOCK_SIZE];
    unsigned char decryptedtext[AES_BLOCK_SIZE + 1]; 
    printf("Enter a message to encrypt (up to 16 bytes): ");
    fgets((char *)plaintext, sizeof(plaintext), stdin);
    size_t len = strlen((char *)plaintext);
    if (len > 0 && plaintext[len - 1] == '\n') {
        plaintext[len - 1] = '\0';
        len--;
    }
    if (len < AES_BLOCK_SIZE) {
        memset(plaintext + len, 0, AES_BLOCK_SIZE - len);
    }
    aes_encrypt(plaintext, ciphertext);
    aes_decrypt(ciphertext, decryptedtext);
    printf("Original message: %s\n", plaintext);
    printf("Encrypted message: ");
    for (int i = 0; i < AES_BLOCK_SIZE; i++) {
        printf("%02x", ciphertext[i]);
    }
    printf("\n");
    printf("Decrypted message: %s\n", decryptedtext);
    return 0;
}
